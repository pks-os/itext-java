<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.itextpdf</groupId>
    <artifactId>root</artifactId>
    <version>9.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>native-image-test</artifactId>

  <name>native-image-test</name>
  <description>Native image tests.</description>
  <url>https://itextpdf.com/</url>

  <properties>
    <itext.version>${project.parent.version}</itext.version>
    <native.maven.plugin.version>0.10.1</native.maven.plugin.version>
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
    <junit.platform.version>1.10.2</junit.platform.version>
    <!-- This is to suppress the parent value. In junit 5 there is no category and
    test filtering mechanism is a bit different (@Tag should be used) -->
    <unittests />
  </properties>

  <dependencies>
    <!-- itext core deps-->
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>font-asian</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>bouncy-castle-adapter</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>forms</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>hyph</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>io</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>kernel</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>layout</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>sign</artifactId>
      <version>${itext.version}</version>
    </dependency>
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>svg</artifactId>
      <version>${itext.version}</version>
    </dependency>

    <!-- junit deps-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>false</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native.maven.plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <buildArgs>
                <arg>
                  --initialize-at-build-time=org.junit.validator.PublicClassValidator
                  -H:ResourceConfigurationFiles=${basedir}/src/test/resources/resource-config.json
                  <!-- Graalvm requires VisualStudio 2022 on Windows but it also works with earlier versions.
                       So this is a workaround to run tests on TC agents having earlier VS versions installed. -->
                  -H:-CheckToolchain
                </arg>
              </buildArgs>
              <skipTests>false</skipTests>
              <metadataRepository>
                <!-- Disable repo to not load metadata from reachability metadata repo after we finally merge our metadata there-->
                <enabled>false</enabled>
              </metadataRepository>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>